{"version":3,"sources":["Components/ContactList/index.js","Components/ContactForm/index.js","Components/Filter/index.js","App.js","reportWebVitals.js","index.js"],"names":["ContactList","contacts","map","id","name","number","ContactForm","onChangeInput","onSubmitForm","nameId","uuidv4","numberId","onSubmit","htmlFor","type","onChange","value","Filter","App","state","filter","handleInput","e","setState","target","handleSubmit","preventDefault","find","alert","this","toLocaleLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAyBeA,EAtBK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,6BACGA,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACGD,EADH,KACWC,IADFF,SC6BFG,EAjCK,SAAC,GAAmD,IAAjDF,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,OAAQE,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aAC5CC,EAASC,cACTC,EAAWD,cACjB,OACE,uBAAME,SAAUJ,EAAhB,UACE,uBAAOK,QAASJ,EAAhB,kBACA,uBACEL,KAAK,OACLU,KAAK,OACLC,SAAUR,EACVS,MAAOZ,EACPD,GAAIM,IAEN,uBAAOI,QAASF,EAAhB,oBACA,uBACEP,KAAK,SACLU,KAAK,OACLC,SAAUR,EACVS,MAAOX,EACPF,GAAIQ,IAEN,qDCLSM,EAfA,SAAC,GAA8B,IAA5BD,EAA2B,EAA3BA,MAAOT,EAAoB,EAApBA,cACjBJ,EAAKO,cACX,OACE,qCACE,uBAAOG,QAASV,EAAhB,mCACA,uBAAOC,KAAK,SAASY,MAAOA,EAAOD,SAAUR,EAAeJ,GAAIA,QCqDvDe,E,4MAvDbC,MAAQ,CACNlB,SAAU,CACR,CAAEE,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDe,OAAQ,GACRhB,KAAM,GACNC,OAAQ,I,EAEVgB,YAAc,SAACC,GACb,EAAKC,SAAL,eAAiBD,EAAEE,OAAOpB,KAAOkB,EAAEE,OAAOR,S,EAE5CS,aAAe,SAACH,GACdA,EAAEI,iBACF,IAAMvB,EAAKO,cACX,GAAI,EAAKS,MAAMlB,SAAS0B,MAAK,qBAAGvB,OAAoB,EAAKe,MAAMf,QAC7DwB,MAAM,GAAD,OAAI,EAAKT,MAAMf,KAAf,gCADP,CAIA,IAAMH,EAAQ,sBACT,EAAKkB,MAAMlB,UADF,CAEZ,CAAEE,KAAIC,KAAM,EAAKe,MAAMf,KAAMC,OAAQ,EAAKc,MAAMd,UAElD,EAAKkB,SAAS,CAAEtB,e,uDAER,IAAD,OACP,OACE,gCACE,2CACA,cAAC,EAAD,CACEG,KAAMyB,KAAKV,MAAMf,KACjBC,OAAQwB,KAAKV,MAAMd,OACnBE,cAAesB,KAAKR,YACpBb,aAAcqB,KAAKJ,eAErB,0CACA,cAAC,EAAD,CAAQT,MAAOa,KAAKV,MAAMC,OAAQb,cAAesB,KAAKR,cACtD,cAAC,EAAD,CACEpB,SACE4B,KAAKV,MAAMC,OACPS,KAAKV,MAAMlB,SAASmB,QAAO,qBAAGhB,KAEzB0B,oBACAC,SAAS,EAAKZ,MAAMC,OAAOU,wBAEhCD,KAAKV,MAAMlB,kB,GAhDT+B,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fda73012.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ContactForm = ({ name, number, onChangeInput, onSubmitForm }) => {\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n  return (\r\n    <form onSubmit={onSubmitForm}>\r\n      <label htmlFor={nameId}>Name</label>\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        onChange={onChangeInput}\r\n        value={name}\r\n        id={nameId}\r\n      />\r\n      <label htmlFor={numberId}>Number</label>\r\n      <input\r\n        name=\"number\"\r\n        type=\"text\"\r\n        onChange={onChangeInput}\r\n        value={number}\r\n        id={numberId}\r\n      />\r\n      <button>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onChangeInput: PropTypes.func.isRequired,\r\n  onSubmitForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Filter = ({ value, onChangeInput }) => {\r\n  const id = uuidv4();\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>Find contacts by name</label>\r\n      <input name=\"filter\" value={value} onChange={onChangeInput} id={id} />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./Components/ContactList\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const id = uuidv4();\n    if (this.state.contacts.find(({ name }) => name === this.state.name)) {\n      alert(`${this.state.name} is already in contacts`);\n      return;\n    }\n    const contacts = [\n      ...this.state.contacts,\n      { id, name: this.state.name, number: this.state.number },\n    ];\n    this.setState({ contacts });\n  };\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          name={this.state.name}\n          number={this.state.number}\n          onChangeInput={this.handleInput}\n          onSubmitForm={this.handleSubmit}\n        />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChangeInput={this.handleInput} />\n        <ContactList\n          contacts={\n            this.state.filter\n              ? this.state.contacts.filter(({ name }) =>\n                  name\n                    .toLocaleLowerCase()\n                    .includes(this.state.filter.toLocaleLowerCase())\n                )\n              : this.state.contacts\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}